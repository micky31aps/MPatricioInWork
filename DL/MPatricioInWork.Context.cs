//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MPatricioInWorkEntities : DbContext
    {
        public MPatricioInWorkEntities()
            : base("name=MPatricioInWorkEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agendum> Agenda { get; set; }
    
        public virtual int AgendaAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, string email)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgendaAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, emailParameter);
        }
    
        public virtual int AgendaDelete(Nullable<int> idTelefono)
        {
            var idTelefonoParameter = idTelefono.HasValue ?
                new ObjectParameter("IdTelefono", idTelefono) :
                new ObjectParameter("IdTelefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgendaDelete", idTelefonoParameter);
        }
    
        public virtual ObjectResult<AgendaGetAll_Result> AgendaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgendaGetAll_Result>("AgendaGetAll");
        }
    
        public virtual ObjectResult<AgendaGetById_Result> AgendaGetById(Nullable<int> idTelefono)
        {
            var idTelefonoParameter = idTelefono.HasValue ?
                new ObjectParameter("IdTelefono", idTelefono) :
                new ObjectParameter("IdTelefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgendaGetById_Result>("AgendaGetById", idTelefonoParameter);
        }
    
        public virtual int AgendaUpdate(Nullable<int> idTelefono, string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, string email)
        {
            var idTelefonoParameter = idTelefono.HasValue ?
                new ObjectParameter("IdTelefono", idTelefono) :
                new ObjectParameter("IdTelefono", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgendaUpdate", idTelefonoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, emailParameter);
        }
    }
}
